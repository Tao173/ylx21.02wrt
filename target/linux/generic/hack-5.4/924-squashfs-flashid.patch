Index: linux-5.4.179/drivers/mtd/mtdsplit/mtdsplit.c
===================================================================
--- linux-5.4.179.orig/drivers/mtd/mtdsplit/mtdsplit.c
+++ linux-5.4.179/drivers/mtd/mtdsplit/mtdsplit.c
@@ -26,7 +26,7 @@
 
 struct squashfs_super_block {
 	__le32 s_magic;
-	__le32 pad0[9];
+	__le32 pad0[6];
 	__le64 bytes_used;
 };
 
Index: linux-5.4.179/drivers/mtd/spi-nor/spi-nor.c
===================================================================
--- linux-5.4.179.orig/drivers/mtd/spi-nor/spi-nor.c
+++ linux-5.4.179/drivers/mtd/spi-nor/spi-nor.c
@@ -5092,6 +5092,21 @@ int spi_nor_scan(struct spi_nor *nor, co
 }
 EXPORT_SYMBOL_GPL(spi_nor_scan);
 
+
+//david add flash id to sysfs
+static ssize_t m25p80_fid(struct device *dev, struct device_attribute *attr, char *buf)
+{
+	struct spi_device *spi = to_spi_device(dev);
+	u8 code[5] = {0}, fid[8];
+
+	code[0] = 0x4b;
+	if (spi_write_then_read(spi, &code, 5, fid, 8) < 0)
+		return sprintf(buf, "\n");
+	return sprintf(buf, "%08X%08X\n", ((u32 *)fid)[0], ((u32 *)fid)[1]);
+}
+static DEVICE_ATTR(fid, S_IRUGO, m25p80_fid, NULL);
+//add end
+
 static int spi_nor_probe(struct spi_mem *spimem)
 {
 	struct spi_device *spi = spimem->spi;
@@ -5152,7 +5167,9 @@ static int spi_nor_probe(struct spi_mem
 		if (!nor->bouncebuf)
 			return -ENOMEM;
 	}
-
+//david add flash id to sysfs
+	device_create_file(&spi->dev, &dev_attr_fid);
+//add end
 	return mtd_device_register(&nor->mtd, data ? data->parts : NULL,
 				   data ? data->nr_parts : 0);
 }
Index: linux-5.4.179/fs/squashfs/squashfs_fs.h
===================================================================
--- linux-5.4.179.orig/fs/squashfs/squashfs_fs.h
+++ linux-5.4.179/fs/squashfs/squashfs_fs.h
@@ -247,10 +247,12 @@ struct squashfs_super_block {
 	__le16			block_log;
 	__le16			flags;
 	__le16			no_ids;
-	__le16			s_major;
+	// __le16			s_major;
+	__le64			bytes_used;
 	__le16			s_minor;
 	__le64			root_inode;
-	__le64			bytes_used;
+	// __le64			bytes_used;
+	__le16			s_major;
 	__le64			id_table_start;
 	__le64			xattr_id_table_start;
 	__le64			inode_table_start;
